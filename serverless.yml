service: fundabl-backend
frameworkVersion: '3'

custom:
  tableName: 'users-table-fundabl-${sls:stage}'
  bucketName: fundabl-frontend-react
  s3Sync:
        - bucketName: ${self:custom.bucketName}
          localDir: frontend/dist/

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    USERS_TABLE: ${self:custom.tableName}

plugins:
  - serverless-s3-sync

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: 'ANY /api'

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
    ReactAppBucket:
            Type: AWS::S3::Bucket
            Properties:
                BucketName: ${self:custom.bucketName}
                AccessControl: PublicRead
                WebsiteConfiguration:
                    IndexDocument: index.html
                    ErrorDocument: index.html
    S3AccessPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket:
                Ref: ReactAppBucket
            PolicyDocument:
                Statement:
                    - Sid: PublicReadGetObject
                      Effect: Allow
                      Principal: '*'
                      Action:
                          - s3:GetObject
                      Resource: arn:aws:s3:::${self:custom.bucketName}/*
    CloudFrontDistribution:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                Origins:
                    - DomainName: ${self:custom.bucketName}.s3.amazonaws.com
                      Id: ReactApp
                      CustomOriginConfig:
                          HTTPPort: 80
                          HTTPSPort: 443
                          OriginProtocolPolicy: https-only
                Enabled: 'true'
                DefaultRootObject: index.html
                CustomErrorResponses:
                    - ErrorCode: 404
                      ResponseCode: 200
                      ResponsePagePath: /index.html
                DefaultCacheBehavior:
                    AllowedMethods:
                        - DELETE
                        - GET
                        - HEAD
                        - OPTIONS
                        - PATCH
                        - POST
                        - PUT
                    TargetOriginId: ReactApp
                    ForwardedValues:
                        QueryString: 'false'
                        Cookies:
                            Forward: none
                    ViewerProtocolPolicy: redirect-to-https
                ViewerCertificate:
                    CloudFrontDefaultCertificate: true
    
